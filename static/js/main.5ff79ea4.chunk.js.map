{"version":3,"sources":["components/Header/index.js","utils/Api.js","components/Info/index.js","App.js","index.js"],"names":["Header","className","axios","get","Info","state","users","filter","sorted","search","loadUsers","Api","then","res","setState","data","results","sortTable","event","console","log","sortArr","sort","a","b","nameA","name","first","toUpperCase","nameB","handleInputChange","value","target","toLowerCase","filtered","query","includes","last","phone","this","type","onChange","placeholder","class","scope","onClick","map","element","src","picture","thumbnail","alt","email","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAgBeA,G,MAdA,WACX,OACI,mCACI,sBAAKC,UAAU,oBAAf,UACI,oBAAIA,UAAU,wBAAd,8BACA,mBAAGA,UAAU,OAAb,mJ,iDCJD,EACD,WACN,OAAOC,IAAMC,IAAI,iDCqFVC,E,4MAtFXC,MAAQ,CACJC,MAAO,GACPC,OAAQ,GACRC,QAAQ,EACRC,OAAQ,I,EAOZC,UAAY,WACRC,IACKC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAER,MAAOO,EAAIE,KAAKC,aAC5CJ,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEP,OAAQ,EAAKF,MAAMC,WAC/CM,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEN,QAAQ,Q,EAG7CS,UAAY,SAACC,GACTC,QAAQC,IAAI,EAAKf,MAAMG,QACvB,IAAIa,EAAU,EAAKhB,MAAMC,MACzBa,QAAQC,IAAIC,IACc,IAAtB,EAAKhB,MAAMG,QACX,EAAKM,SAAS,CAAEN,QAAQ,IACxBa,EAAQC,MAAK,SAAUC,EAAGC,GACtB,IAAIC,EAAQF,EAAEG,KAAKC,MAAMC,cACrBC,EAAQL,EAAEE,KAAKC,MAAMC,cAEzB,OAAIH,EAAQI,EACD,EAEPJ,EAAQI,GACA,EAGL,MAGX,EAAKf,SAAS,CAAEN,QAAQ,IAG5B,EAAKM,SAAS,CAAEP,OAAQc,K,EAG5BS,kBAAoB,SAACZ,GACjB,IAAMa,EAAQb,EAAMc,OAAOD,MAAME,cAE3BC,EAAW,EAAK7B,MAAMC,MAAMC,QAAO,SAAA4B,GAAK,OAAIA,EAAMT,KAAKC,MAAMM,cAAcG,SAASL,IAAUI,EAAMT,KAAKW,KAAKJ,cAAcG,SAASL,IAAUI,EAAMG,MAAMF,SAASL,MAC1K,EAAKjB,SAAS,CAAEP,OAAQ2B,K,kEAxCxBK,KAAK7B,c,+BA4CL,OACI,qCACI,qBAAKT,UAAU,oDAAf,SACI,sBAAMA,UAAU,cAAhB,SACI,uBAAOA,UAAU,uBAAuBuC,KAAK,SAASC,SAAUF,KAAKT,kBAAmBY,YAAY,qBAG5G,wBAAOC,MAAM,iCAAb,UACI,gCACI,+BACI,oBAAIC,MAAM,MAAV,mBACA,oBAAIC,QAASN,KAAKtB,UAAW2B,MAAM,MAAnC,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGR,gCAEQL,KAAKlC,MAAME,OAAOuC,KAAI,SAAAC,GAAO,OACzB,+BACI,oBAAIH,MAAM,MAAV,SAAgB,qBAAKI,IAAKD,EAAQE,QAAQC,UAAWC,IAAI,QACzD,+BAAKJ,EAAQrB,KAAKC,MAAlB,IAA0BoB,EAAQrB,KAAKW,QACvC,6BAAKU,EAAQT,QACb,6BAAKS,EAAQK,0B,GA5E9BC,IAAMC,WCSVC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5ff79ea4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <div className=\"jumbotron bg-info\">\r\n                <h1 className=\"display-4 text-center\">Employee Finder!</h1>\r\n                <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\r\n                \r\n            \r\n               \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","//https://randomuser.me/api/?results=200&nat=us\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    getUsers: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=50&nat=us\")\r\n    }\r\n}","import React from 'react'\r\nimport Api from '../../utils/Api'\r\n\r\nclass Info extends React.Component {\r\n    state = {\r\n        users: [],\r\n        filter: [],\r\n        sorted: false,\r\n        search: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUsers();\r\n    }\r\n\r\n    loadUsers = () => {\r\n        Api.getUsers()\r\n            .then(res => this.setState({ users: res.data.results }))\r\n            .then(res => this.setState({ filter: this.state.users }))\r\n            .then(res => this.setState({ sorted: false }))\r\n    }\r\n\r\n    sortTable = (event) => {\r\n        console.log(this.state.sorted)\r\n        let sortArr = this.state.users;\r\n        console.log(sortArr)\r\n        if (this.state.sorted === false) {\r\n            this.setState({ sorted: true })\r\n            sortArr.sort(function (a, b) {\r\n                let nameA = a.name.first.toUpperCase();\r\n                let nameB = b.name.first.toUpperCase();\r\n\r\n                if (nameA > nameB) {\r\n                    return 1;\r\n                }\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n        } else {\r\n            this.setState({ sorted: false })\r\n        }\r\n\r\n        this.setState({ filter: sortArr })\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const value = event.target.value.toLowerCase();\r\n        // console.log(value);\r\n        const filtered = this.state.users.filter(query => query.name.first.toLowerCase().includes(value) || query.name.last.toLowerCase().includes(value) || query.phone.includes(value));\r\n        this.setState({ filter: filtered })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <nav className=\"navbar navbar-dark bg-dark justify-content-center\">\r\n                    <form className=\"form-inline\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" onChange={this.handleInputChange} placeholder=\"Enter a name\" />\r\n                    </form>\r\n                </nav>\r\n                <table class=\"table table-striped table-dark\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Photo</th>\r\n                            <th onClick={this.sortTable} scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Phone</th>\r\n                            <th scope=\"col\">Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.filter.map(element => (\r\n                                <tr>\r\n                                    <td scope=\"row\"><img src={element.picture.thumbnail} alt=\"1\" /></td>\r\n                                    <td>{element.name.first} {element.name.last}</td>\r\n                                    <td>{element.phone}</td>\r\n                                    <td>{element.email}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info; \r\n","import Header from \"./components/Header\";\nimport Info from \"./components/Info\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Info/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}