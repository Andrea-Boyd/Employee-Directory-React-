{"version":3,"sources":["components/Header/index.js","utils/Api.js","components/Info/index.js","App.js","index.js"],"names":["Header","className","axios","get","Info","state","users","filter","sorting","search","loadUsers","Api","then","res","setState","data","results","sortTable","event","console","log","sortArr","sort","a","b","nameA","name","first","toUpperCase","nameB","handleInputChange","value","target","filtered","query","includes","last","phone","this","type","onChange","placeholder","class","scope","onClick","map","element","src","picture","thumbnail","alt","email","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAgBeA,G,MAdA,WACX,OACI,mCACI,sBAAKC,UAAU,oBAAf,UACI,oBAAIA,UAAU,wBAAd,8BACA,mBAAGA,UAAU,OAAb,mJ,iDCJD,EACD,WACN,OAAOC,IAAMC,IAAI,iDCgFVC,E,4MAjFXC,MAAO,CACHC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,OAAQ,I,EAOZC,UAAY,WACRC,IACKC,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAER,MAAOO,EAAIE,KAAKC,aAC5CJ,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEP,OAAQ,EAAKF,MAAMC,WAC/CM,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEN,QAAS,EAAKH,MAAMC,Y,EAGzDW,UAAY,SAACC,GAETC,QAAQC,IAAI,EAAKf,MAAMG,SACvB,IAAIa,EAAU,EAAKhB,MAAMG,QAEzBa,EAAQC,MAAK,SAASC,EAAGC,GACrB,IAAIC,EAAQF,EAAEG,KAAKC,MAAMC,cACrBC,EAAQL,EAAEE,KAAKC,MAAMC,cAEzB,OAAGH,EAAQI,EACA,EAERJ,EAAQI,GACC,EAGL,KAEX,EAAKf,SAAS,CAACP,OAAQc,K,EAG3BS,kBAAoB,SAACZ,GACjB,IAAMa,EAAQb,EAAMc,OAAOD,MAErBE,EAAW,EAAK5B,MAAMC,MAAMC,QAAO,SAAA2B,GAAK,OAAIA,EAAMR,KAAKC,MAAMQ,SAASJ,IAAUG,EAAMR,KAAKU,KAAKD,SAASJ,IAAUG,EAAMG,MAAMF,SAASJ,MAC9I,EAAKjB,SAAS,CAAEP,OAAQ0B,K,kEAnCxBK,KAAK5B,c,+BAuCL,OACI,qCACJ,qBAAKT,UAAU,oDAAf,SACI,sBAAMA,UAAU,cAAhB,SACI,uBAAOA,UAAU,uBAAuBsC,KAAK,SAASC,SAAUF,KAAKR,kBAAmBW,YAAY,qBAG5G,wBAAOC,MAAM,iCAAb,UACI,gCACI,+BACI,oBAAIC,MAAM,MAAV,mBACA,oBAAKC,QAASN,KAAKrB,UAAW0B,MAAM,MAApC,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGR,gCAEQL,KAAKjC,MAAME,OAAOsC,KAAI,SAAAC,GAAO,OAC7B,+BACI,oBAAIH,MAAM,MAAV,SAAgB,qBAAKI,IAAKD,EAAQE,QAAQC,UAAWC,IAAI,QACzD,+BAAKJ,EAAQpB,KAAKC,MAAlB,IAA0BmB,EAAQpB,KAAKU,QACvC,6BAAKU,EAAQT,QACb,6BAAKS,EAAQK,0B,GAvElBC,IAAMC,WCSVC,MATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91cc6f27.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = () => {\n    return (\n        <>\n            <div className=\"jumbotron bg-info\">\n                <h1 className=\"display-4 text-center\">Employee Finder!</h1>\n                <p className=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n                \n            \n               \n            </div>\n        </>\n    )\n}\n\nexport default Header;\n","//https://randomuser.me/api/?results=200&nat=us\nimport axios from \"axios\";\n\nexport default {\n    getUsers: function() {\n        return axios.get(\"https://randomuser.me/api/?results=50&nat=us\")\n    }\n}","import React from 'react'\nimport Api from '../../utils/Api'\n\nclass Info extends React.Component {\n    state ={\n        users: [],\n        filter: [],\n        sorting: [],\n        search: \"\"\n    }\n\n    componentDidMount () {\n        this.loadUsers();\n    }\n\n    loadUsers = () => {\n        Api.getUsers()\n            .then(res => this.setState({ users: res.data.results }))\n            .then(res => this.setState({ filter: this.state.users }))\n            .then(res => this.setState({ sorting: this.state.users }))\n    }\n    \n    sortTable = (event) => {\n        // event.preventDefault();\n        console.log(this.state.sorting)\n        let sortArr = this.state.sorting;\n\n        sortArr.sort(function(a, b)  {\n            let nameA = a.name.first.toUpperCase();\n            let nameB = b.name.first.toUpperCase();\n\n            if(nameA > nameB) {\n                return 1;\n            }\n            if(nameA < nameB) {\n                return -1;\n            }\n\n            return 0;\n        })\n        this.setState({filter: sortArr})\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        // console.log(value);\n        const filtered = this.state.users.filter(query => query.name.first.includes(value) || query.name.last.includes(value) || query.phone.includes(value));\n        this.setState({ filter: filtered })\n    }\n\n    render(){\n        return (\n            <>\n        <nav className=\"navbar navbar-dark bg-dark justify-content-center\">\n            <form className=\"form-inline\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" onChange={this.handleInputChange} placeholder=\"Enter a name\"/>\n            </form>\n        </nav>\n        <table class=\"table table-striped table-dark\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Photo</th>\n                    <th  onClick={this.sortTable} scope=\"col\">Name</th>\n                    <th scope=\"col\">Phone</th>\n                    <th scope=\"col\">Email</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    this.state.filter.map(element => (\n                    <tr>\n                        <td scope=\"row\"><img src={element.picture.thumbnail} alt=\"1\"/></td>\n                        <td>{element.name.first} {element.name.last}</td>\n                        <td>{element.phone}</td>\n                        <td>{element.email}</td>\n                    </tr>\n                ))\n                    }\n            </tbody>\n        </table>\n    </>\n    )\n}\n}\n\nexport default Info; \n","import Header from \"./components/Header\";\nimport Info from \"./components/Info\"\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Info/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}